# cat fkvtext_analysed.txt | lookup2cg | vislcg3 -g disambiguation.cg3 -t
# echo 'sentence' | preprocess | lookup -flags mbTT 1.fst | lookup2cg|vislcg3 -g ../../syntax/1_disambiguation.cg3

#   ============================ #
#!! !!!Start making a syntactic disambiguator
#   ============================ #

#!! !!Sets

# ========== #
# Delimiters #
# ========== #


DELIMITERS = "<.>" "<...>" "<!>" "<?>" "<¶>" ;
#!! Sentence delimiters are the following: "<.>" "<...>" "<!>" "<?>" "<¶>"




# ============= #
# Tags and sets #
# ============= #


# ========
   SETS
# ========

LIST BOS = (>>>) (<s>) (sent);
LIST EOS = (<<<) (</s>); # vislcg and CG-2 together.

#!! !Part-of-Speech
LIST N = N ;  #!! * N = noun
LIST A = A ;  #!! * A = adjective
LIST Num = Num ;  #!! * Num = numeral
LIST V = V ;  #!! * V = verb
LIST CC = CC ; #!! * CC = conjunction
LIST CS = CS ; #!! * CS = subjunction
LIST Adv = Adv ; #!! * Adv = adverb
LIST Pr = Pr ;  #!! * Pr = preposition
LIST Po = Po ;  #!! * Po = postposition
LIST Pron = Pron ; #!! * Pron = pronoun
LIST Interj = Interj ; #!! * Interj = interjection
LIST CLB = CLB ;
LIST CLBfinal = CLBfinal ; # because common num
LIST PUNCT = PUNCT ;
LIST Prs = Prs ;
LIST Prt = Prt ;
LIST Act = Act ;
LIST Pass = Pass ;

LIST Attr = Attr ; # ?

#!! !Numerus
LIST Sg = Sg ;   #!! * Sg = Singular
LIST Pl = Pl ;   #!! * Pl = Plural
LIST Sg1 = Sg1 ;   #!! * Sg1 = Singular 1.p.
LIST Sg2 = Sg2 ;   #!! * Sg2 = Singular 2.p.
LIST Sg3 = Sg3 ;   #!! * Sg3 = Singular 3.p.
LIST Pl1 = Pl1 ;   #!! * Pl1 = Plural 1.p.
LIST Pl2 = Pl2 ;   #!! * Pl2 = Plural 2.p.
LIST Pl3 = Pl3 ;   #!! * Pl3 = Plural 3.p.
#!! !Cases
LIST Nom = Nom ; #!! * Nom
LIST Gen = Gen ;   #!! * Gen
LIST Acc = Acc ;   #!! * Acc
LIST Par = Par ;   #!! * Par
LIST Ine = Ine ;   #!! * Ine
LIST Ill = Ill ;   #!! * Ill
LIST Ela = Ela ;   #!! * Ela
LIST Ade = Ade ;   #!! * Ade
LIST Abe = Abe ;   #!! * Abe
LIST All = All ;   #!! * All
LIST Abl = Abl ;   #!! * Abl
LIST Ess = Ess ;   #!! * Ess
LIST Tra = Tra ;   #!! * Tra
LIST Ins = Ins ;   #!! * Ins
LIST Com = Com ;   #!! * Com
LIST SUBJ-CASE = Nom Par ;   #!! * SUBJ-CASE = Nom Par

LIST CASE = Nom Gen Acc Par Ine Ill Ela Ade Abe All Abl Ess Tra Ins Com ;	
LIST Pos = Pos ;	
LIST Comp = Comp ;
LIST Superl = Superl ;	
LIST Ord = Ord ;

LIST Err/Orth = Err/Orth ;
	
#!! !Types
LIST Prop = Prop ;   #!! * Prop = Proper noun
LIST Interr = Interr ;   #!! * Interr = Interrogative
LIST Dem = Dem ; #!! * Dem = demonstrative pron
LIST Rel = Rel ;   #!! * Rel = Relative pron
LIST Relpronpl = (Pron Rel Pl) ; #!! Relpronpl "mikkä ja "jokka"
LIST Relpronsg = (Pron Rel Sg) ; #!! Relpronsg "mikä" ja "joka"
LIST Interrpronpl = (Pron Interr Pl) ; #!! Interrpronpl "kuka" ja "mikä"
LIST Pers = Pers ; #!! * Pers = Personal pron
LIST Indef = Indef ; #!! * Indef = Indef pron
LIST Qu = Qu ;

LIST Inf = Inf ; #!! * Inf = Infinitive
LIST ConNeg = ConNeg ; #!! * ConNeg = Conjugated as Negative form
LIST PrfPrc = PrfPrc ;  #!! * PrfPrc = Perfectum Particip
LIST Imprt = Imprt ; #!! * Imprt = Imperative
LIST Act = Act ; #!! * Act = Active
LIST Neg = Neg ; #!! * Neg = Negation verb


LIST PxSg1 = PxSg1 ;
LIST PxSg2 = PxSg2 ;
LIST PxSg3 = PxSg3 ;
LIST PxPl1 = PxPl1 ;
LIST PxPl2 = PxPl2 ;
LIST PxPl3 = PxPl3 ;

LIST PX = PxSg1  PxSg2  PxSg3  PxPl1  PxPl2  PxPl3 ;	
	
LIST COMMA = "," ; #!! * COMMA = comma
LIST Foc/han = Foc/han ;
LIST Foc/kaan = Foc/kaan ; #!! * Foc/kaan = focus clitic -kaan
LIST Sem/Fem = Sem/Fem ; #!! * Sem/Fem = feminin propernoun
LIST @CVP = @CVP ; # !! * @CVP = Conjunction or subjunction that conjoins finite verb phrases.
LIST @CNP = @CNP ; # !! * @CNP = Local conjunction or subjunction.

LIST Sem/ID = Sem/ID ;
LIST Arab = Arab ;

LIST CURRENCY = "dinaari" "dollari" "euro" "kruunu" "kr" "rupla" "rubel" "¢" "€" "$";
	

#!! !!Sets with more members
# ====

LIST WORD = N V A Adv Pr Interj Po Num CC CS Pron  ; #!! * WORD = all PoS

# Sets for barriers
LIST NPMOD = (Pers Gen) (A Gen) (A Ine) (A Ade) (A Nom) (A Par) (A Acc) ; #!! * NPMOD = these can modify a noun
SET NPMODADV = NPMOD OR Adv ; #!! * NPMODADV = NPMOD plus adverb

SET NOT-NPMOD = WORD - NPMOD ; #!! * NOT-NPMOD = these cannot modify a noun

SET NOT-NPMODADV = WORD - NPMODADV ; #!! * NOT-NPMODADV = these cannot modify a noun, and is not adverb

LIST QVANT-ADV = "paljon" "vähän" "enämen" "vähemän" ;  #!! * QVANT-ADV = e.g. paljon, vähän
LIST KUNKA = "kunka" "missä" ;  #!! * KUNKA = e.g. kunka missä (adverbs that start a sentence)


SET S-BOUNDARY = CS OR ("mutta") OR (":") OR Rel OR @CVP OR KUNKA ;  #!! * S-BOUNDARY = words that start a sentence

LIST VFIN = Ind Cond Pot Imprt   ;  #!! * VFIN = finite verb

LIST COPULAS = "olla" ;  #!! * COPULAS = olla

LIST MOD-ASP =  "saađa" "häyttyyt"   ; #add lemmas  #!! * MOD-ASP = auxilaries

LIST AUX-OR-MAIN = "tulla" "osata" "haluta"  ; #add lemmas  #!! * AUX-OR-MAIN = verbs which can be both auxilary and mainverb

SET AUX = COPULAS OR MOD-ASP OR AUX-OR-MAIN ;  #!! * AUX = verbs which can be auxilary

SET SV-BOUNDARY = S-BOUNDARY OR VFIN   ;  #!! * SV-BOUNDARY = words that start a sentence and finite verb

LIST ELA-VERB = "herättäät" "pittäät" ;


# Here come the rules

BEFORE-SECTIONS

REMOVE CLBfinal ;

SELECT:Sem/ID Sem/ID IF (-1 ("§")) ; 
REMOVE:Sem/ID Sem/ID IF (1 CURRENCY) ; 

SELECT:Arab Arab IF (NOT 0 Ord OR Prop OR Arab + Err/Orth) ; # In Apertium we get analysis both with and without the tag.


REMOVE:dyn  Arab (0 Prop) ; # foreløpig løsning, til vi har ny løsning for numerals.lexc
	

SECTION
#!! !!Disambiguation rules

#!! !Early rules
# SELECT:Dummyrule WORD IF (0 WORD) ;

#!! * __person_test__ selects finite verb if there is a Pron Pers to the left
SELECT:person_test VFIN IF (-1 Pers) ; # exempel

#!! * __adv_after_V__ selects adverb if there is a verb to the right
SELECT:adv_after_V Adv IF (-1 V)
       (NEGATE 0 Dem OR Indef LINK *1 N BARRIER WORD - A)
       (NEGATE 0 Pron LINK 1 COMMA LINK 1 KUNKA OR Rel OR CS) ;

	#$ sykläsin+V noppeesti+Adv tähään+Dem koulhuun+N+Ill  # noppeesti
	#$ Konferansiprogramin saatat lukea tästä: www.fad.dep.no.
	#% on+V       tänä+Dem  A    vuona+N

#!! * __prop_infrontof_kieli__ removes propernoun in fron of kieli, if it kan be something else, e.g. Kainun kieli
REMOVE:prop_infrontof_kieli Prop (0 Gen OR Pron OR A LINK 1 ("kieli")) ;
	#$ Kainun kieli oon osa Ruijan kulttuuriperinnöstä.

#!! * __PropInit__ removes  propernoun in the beginning of a sentence if it kan be a CC or a Pr (e.g. Mutta)
REMOVE:PropInit Prop (*-1 BOS BARRIER WORD)  ((0 CC) OR (0 Pr LINK 1 N)) ;
	#$ Mutta kaikila kirjailiijoila

#!! * __PropNotInit__ selects  propernoun if it is not in the beginning of a sentence
SELECT:PropNotInit Prop (NOT *-1 BOS BARRIER WORD) ;


#!! Possessive suffixes

	# First we put rules to choose Px forms... (forthcomong)

	# Then we remove the remaining Px
REMOVE:NoPx PX ;

	
#!! Numeral phrases

REMOVE:NomParNum Gen IF (0 Num + Nom)(1 Par);
	## kaksi sannaa
	

#!! !Preposition/postposition/adverb rules

REMOVE Po IF (NOT -1 Gen);

#% Met panema  oven ja klasireijät kiini.

REMOVE Pr IF (NOT -1 Gen);
#% Met panema  oven ja klasireijät kiini.

#!! * __Prifgenpar__ selects  preposition to the left of Gen or Par
SELECT:Prifgenpar Pr IF (1 Gen OR Par);

#!! * __Poifgenpar__ selects  postposition to the right of Gen or Par
SELECT:Poifgenpar Po IF (-1 Gen OR Par)(NEGATE 0 ("aikkaa") LINK NOT -1 Pron + Gen) ;
  #$  Ja hän itte meni heiđän etheen, kumarsi seittemen kerttaa maahan siksi ko hän tuli veljen etheen(en setning hvor den skal fungere)
  #% Mutta heilä ei ole juurta, het uskothaan vain vähäsen aikkaa, ja ko heitä freistathaan niin het jääđhään pois (setning hvor den ikke skal fun).
  #$ eksempel med aikkaa (het uskothaan vain vähäsen aikkaa)

#!! * __vasthaan__
REMOVE ("vasta") IF (-1 Par)(0 ("vasthaan"));


#!! !!Rules for mapping @CVP and @CNP on the CC and CS

#!! * __CVP__ maps @CVP to CS and mutta
MAP:CVP @CVP TARGET CS OR ("mutta") ;

#!! * __CNPifN__ maps @CNP to CC between two N
MAP:CNPifN @CNP TARGET CC IF (-1 N)(*1 N BARRIER NOT-NPMOD) ;
	#$ mitä Kväänin kieliraati ja Kväänin kielitinka oon tehneet ...

#!! * __CNPifInf__ maps @CNP to CC between two Inf
MAP:CNPifInf @CNP TARGET CC IF (-1 Inf)(1 Inf) ;


#!! !!Case rules

#!! !Partitive
REMOVE:vasthaan Nom IF (0 Par)(1 ("vasthaan"));
#$ Eesau juoksi häntä vastaan.

SELECT:häntä Par IF (-1 V)(0 ("häntä"));

REMOVE:ParNotImprt Imprt IF (0 Par)(*1 Neg);
#€ Viimi aikhoin heitä ei ole näkyny ollenkhaan.

SELECT Pron IF (-1 V)(0 ("tet") + Pl + Par)(1 V);


#!! Genitive

REMOVE:GenNotSg1 Sg1 IF (-1 V)(0 Gen);

#!! !Illative

REMOVE:han Foc/han IF (0 ("ma"))(*-1 V);

#!! !!Number rules

REMOVE:PropSg Pl IF (0 Prop + Sg);

REMOVE Pl + Par IF (-1 Sg)(0 Sg + Par);

#!! !!More disambiguation rules
#!! * __SgNotPl__
REMOVE:Sg3 Pl3 IF (0 Sg3)(NOT *0 Pl + Nom BARRIER Pl3);


#!! !Elative


#!! !!Verbs

	
#!! !Specific verbs	
SELECT:eliV V IF (-1 Pron + Rel)(0 ("eli")) ;
	## mies joka eli ...

SELECT:eliCC CC IF (-2 $$CASE)(0 ("eli"))(1 $$CASE);
	## mies eli jätkä
SELECT:eliCC CC IF (-2 $$CASE)(-1 COMMA)(0 ("eli"))(1 $$CASE);
	## mies eli jätkä
SELECT:eliCC CC IF (-1 $$CASE)(0 ("eli"))(1 $$CASE);
	## mies eli jätkä

SELECT:eliCCforInf CC IF (*-1 Inf BARRIER VFIN)(1 Inf) ;
	## saattaat realiserata strategian eli auttaat kveenin kielen kehittymistä
	
#SELECT:eliCCdef CC IF (-1 COMMA)(1 ("\""));
SELECT:eliCCdef CC IF (-1 COMMA)(1 PUNCT);	
	
#!! !!Adverbs

SELECT:paljon Adv IF (0 ("paljon"))(NOT 1 Po);
SELECT:kerran Adv IF (0 ("kerran"))(1 VFIN);

SELECT:jälkhiin Adv IF (-1 Par)(0 ("jälkhiin"));


SELECT:miksi Adv IF (0 ("miksi"))(NOT 1  Tra);	

#!! !! Conjunctions

REMOVE Prop IF (0 ("mutta"));

#!! !!Subjunctions
REMOVE:CS CC IF (-1 BOS OR CC)(0 CS);
#$ Jos mie nyt olen...

#!! jos
REMOVE:josNotCC CC IF (0 ("jos" CS));
# Awaiting exaples with CC.
	
#!! ko	
REMOVE:koNotCC CC IF (0 ("ko" CS));
# Awaiting exaples with CC.
	
#!! sillä	
SELECT CS IF (-1 BOS OR CLB)(0 ("sillä"))(NOT 1 V);
#$ , sillä tarkoitus oli tulla.

REMOVE CC IF (-1 BOS OR CLB OR Adv OR CS)(0 CS)(NOT 1 Adv);

REMOVE CC IF (-1 V)(0 CS)(1 N OR A OR Pron);

#!! !!Pronouns

SELECT:sie Pron IF (0 ("sie"))(*0 Sg2);

REMOVE:Pers Dem IF (0 Pers)(NOT 1 NPMOD OR N);

REMOVE:Rel Interr IF (0 Rel)(-1 N);
REMOVE:Interr Rel IF (0 Interr)(-1 V);
REMOVE:RelNotQu Qu IF (0 Rel)(1 V);

SELECT:koko Pron IF (0 ("koko"))(1 N);

REMOVE Attr IF (NOT 1 N);

#!! !!Verb rules, Verbs

#!! !Infinitive

SELECT Inf IF (-1 AUX);
#$ Hän sai kuula ette Jeesus oli tulemassa.

#!! !!Present Sg3

REMOVE:Sg3NotInf Inf IF (0 Sg3)(1 Inf);

REMOVE:Sg3NotPar Par IF (0 Sg3)(1 Inf);

REMOVE Imprt IF (-1 Sg + Nom)(0 Prs + Sg3) ;

REMOVE N IF (-1 Sg + Nom)(0 ("vastata") + Sg3) ;

#!! !!Present Pl3 or Passive

REMOVE:Pl3NotPass Pass IF (0  Pl3)(*0 Pl3 + Nom OR Pl + Nom);

REMOVE:SgJaSgNotPass Pass IF (-1 Sg + Nom LINK *-1 CC BARRIER NOT-NPMODADV LINK -1 Sg + Nom) ;
REMOVE:Pl3 Sg3 IF (-1C Pl + Nom) ;
REMOVE:Pl3 Sg3 IF (-1C Pl3 + Nom) ;

REMOVE:PassNotPl3 Pl3 IF (NOT *0 Pl + Nom OR CC)(-1 Pl1 OR Pl2 OR Gen OR Par);
	
#!! * __Pl3ollaifplrelpronandplinterrpron__ selects Pl3 if olla
SELECT:Pl3ollaifplrelpronandplinterrpron Pl3 IF (0 ("olla")) ((-1 (N Pl Nom) OR Pron + Pl3 + SUBJ-CASE OR Pron + Pl + SUBJ-CASE) OR (1 (N Pl) + SUBJ-CASE)) ;
  #$ Nämät käskyt mikkä mie tääpänä annan sinule
  #$ Kekkä oon nämät jokka oon sinun myötä?
  #$ Kaikki muut jokka oon tulheet ennen minuu
  #$ Kirjota: Autuhaat oon net jokka oon kuttuttu Karittan hääruokapöythään.
  #$ Nämät oon net lapset jokka Jumala hänen armossa oon suonut sinun palvelijale.
  #% ... Jumala hänen armossa oon suonut sinun palvelijale.
  #% Mikä oon sinun meininki näissä kaikissa ihmissä tässä joukossa ...
  #%  ... sillä Herra oon se joka tuomittee minun.
  #% Kansa sillon ko olen tehny jotaki mistä toiset ei tykätäl.

#!! * __Sg3ollaifplrelpronandplinterrpron__ selects Sg3 if olla
SELECT:Sg3ollaifplrelpronandplinterrpron Sg3 IF (0 ("olla")) (*-1 (N Sg Nom) OR  Relpronsg + Nom BARRIER WORD - Adv) ;
  #$ ... Jumala hänen armossa oon suonut sinun palvelijale.
  #$ Mikä oon sinun meininki näissä kaikissa ihmissä tässä joukossa ...
  #$  ... sillä Herra oon se joka tuomittee minun.
  #$ Kansa sillon ko olen tehny jotaki mistä toiset ei tykätäl.

#!! * __Sg3ollainpretandperf__ selects Sg3 if COPULAS
SELECT:Sg3ollainpretandperf Sg3 IF (0 COPULAS LINK 1 PrfPrc)(*-1 BOS BARRIER WORD)  ;
#$ Oon kirjoitettu profeeta Esekielin tykönä luvussa 34, värsyt 23 - 31: 23.
# ... jokka Jumala hänen armossa oon suonut sinun palvelijale.

#!! * __Sg3ollainpretandperf__ selects Sg3 if COPULAS
SELECT:Sg3ollainpretandperf Sg3 IF (0 COPULAS LINK 1 Ade LINK *1 Nom OR Par BARRIER NOT-NPMODADV)(*-1 BOS OR S-BOUNDARY BARRIER WORD)  ;

# Oonhan meilä vielä kieli.
# Oonko niilä semmmosta kulttuurii, mitä ...
#$  Oon juuri tyven.
#$ Oonko se tosi, ette semmoinen Alattion mies oon käyny aivan kiini Kööpenhaminassa asti ja puhunu kuninkhaan kans?
# Oon aamu.
# Oon hyvin näköistä.
# Oonpa ihana paikka!
# Oonko Ollin Nuutti tullu takaisin kuninkhaan tykköö?
# Ollin Nuutti likenee pitkin tietä ja oon heti ihmisten tykönä.
# Universiteetin siljola oon oikhein iso kartano.
# Siinä kartanossa oon semmoinen ymmyräinen loma
# ... mihin oon meininki lähteet?
# Meilä oon vielä vaapa sija.


#!! * __Relpronandnotintterpron__ selects Rel Sg if Interr
SELECT:Relpronandnotintterpron Relpronsg IF (0 Interr)(*-1 N + Sg OR Pron + Sg OR Pron + Sg3 BARRIER WORD - CC) (NEGATE *1 ("?") BARRIER S-BOUNDARY) ;
# Kekkä oon nämät jokka oon sinun myötä?
# Anna se mikä oon sinun, olla sinun.
# ... ota vasthaan tämän lahjan mikä tuopi minun siunauksen, ja minkä tuothiin sinule ...
# Mutta Herra Jumala huusi miehele ja sanoi hänele: Missä sie olet?
# Mikä oon sinun meininki näissä kaikissa ihmissä tässä joukossa mikä oon sinun matkassa, ja jokka mie olen nyt kohðanu?"
# ... ota vasthaan tämän lahjan mikä tuopi minun siunauksen, ja minkä tuothiin sinule, sillä Jumala oon näyttäny minule.

#!! * __Relpronandnotintterpron__ selects Rel Sg if Interr
SELECT:Relpronandnotintterpron Relpronsg IF (0 Interr)(*-1 (PUNCT RIGHT) BARRIER WORD - CC LINK *-1 (PUNCT LEFT) BARRIER WORD - CC LINK -1 N + Sg OR Pron + Sg OR Pron + Sg3) (NEGATE *1 ("?") BARRIER S-BOUNDARY) ;
# Raatimies Odd Keskitalo informeerasi sekretariaatin funkšuunista (toiminta vailuu kokonhans), minkä jälkhiin raatimiehet selvästi ilmasthiin, ette tarvithaan ainaski kohta 100% stillinki, jotta kyethään ottamhaan vaarhiin ja selviämhään kaikista tarpheista ja haastheista.

#!! * __interrpron__ selects Interr if ? in the end
SELECT:interrpron Interr IF  (*1 ("?") ) ;
# Mikä oon sinun meininki näissä kaikissa ihmissä tässä joukossa mikä oon sinun matkassa, ja jokka mie olen nyt kohðanu?"

#!! * __DifferenceBetweenNiitäImprtAndNiitäDemAndPersIfSubj__ selects Pron Dem Pl or Pron Pers Pl3 when finite verb to the right
SELECT:DifferenceBetweenNiitäImprtAndNiitäDemAndPersIfSubj (Pron Dem Pl) OR (Pron Pers Pl3) IF (0 Par OR Nom)((1 VFIN + Pl3) OR (-1 VFIN + Pl3)) ;
# ... vaikka niitä oonki paljon, oon yksi ruumis, niin oon Kristuski.
# Net huuðethiin ...
# Autuhaat oon net jokka oon kuttuttu Karittan hääruokapöythään.
# Hän puhhuu omile lamphaile nimeltä ja viepi net ulos.
# Net menhään pakhoon sillä net ei tunneta outoihmisen ääntä.
# Net lyöđhään yli venheen.
# Net lullathiin minun pehmeesti,
# vapauttaat kaikki net jokka koko ijän kuoleman pölö stä olthiin olheet orjana.
# V Act Imprt Sg2

#SELECT:differencebetweenniitäimprtandniitädemandpersifitsobj
# Kuka käipi taivhaassa meiðän eðestä noutamassa niitä alas, niin ette saatama kuulla niitä ja elläät niitten tahðossa.
# Kuka käipi toisela puolela mertä noutamassa niitä, niin ette saatama kuulla niitä ja elläät niitten tahðossa.
# Kalliole puðonnu siemen merkittee niitä ...
# Mutta hyvhään maahaan puðonnut siemen merkittee niitä ...
# Pron Dem Pl Par

#!! * __paljonadvandnotpaljonoun__ selects Adv if paljon
SELECT:paljonadvandnotpaljonoun Adv IF (0 ("paljon") LINK *1 N + Par + Pl BARRIER WORD -  (A Par)) ;

#!! * __Relpronifitsanounoracommabeforeit__ selects Rel Pl if N to the left
SELECT:Relpronifitsanounoracommabeforeit Relpronpl IF ((-1 N + Pl OR Pron + Pl OR Pron + Pl3) OR (-1 COMMA LINK -1 N))(NEGATE *1 ("?")) ;
   #$ Kaikki muut jokka oon tulheet ennen minuu
    #%Kekkä oon nämät jokka oon sinun myötä?

# REMOVE:differentiatebetweenhäntänounandthirdperpron  ("häntä") IF (0 Pers) (*-1 V BARRIER WORD - Adv LINK NOT 0 ("olla")) ;
#$ Ja Eesau juoksi häntä vasthaan, ja hän alkoi hyvväilemähään häntä, otti hänen kaulan ympäri ja summasteli häntä, ja het itkethiin.
#$  ... hän kävelee heiðän eðessä, ja lamphaat kyytäthään häntä ...

#!! * __annaimperativeandnotannaname__ removes Prop if Anna se
REMOVE:annaimperativeandnotannaname ("Anna") IF (0 Imprt) (1 Pron LINK 1 Relpronsg)  ;
# Anna se mikä oon sinun, olla sinun.
# N Prop Sem/Fem Sg Nom
# V Act Imprt Sg2

#!! * __tulinounfromtuliprtsg3__ selects V Sg
SELECT:tulinounfromtuliprtsg3 V + Sg3 IF  (-1 N + Par LINK *-1 QVANT-ADV BARRIER WORD - A) ;
# ... kumarsi seittemen kerttaa maahaan siksi ko hän tuli veljen etheen.
# Paljon ihmissii tuli nyt kaikista kaupungiista siltä alalta.
# QVANT-ADV



#!! * __dempronandnotpronpers__ selects Den if A of N to the right
SELECT:dempronandnotpronpers Dem IF (1 A OR N) (NEGATE -1 Dem LINK -1 V) (NEGATE 0 Ade LINK NOT 1 Ade + N) ;
#$ Päivää jälkhiin se iso ihmisjoukko mikä oli tullu juhlhiin, sai kuula ette Jeesus oli tulemassa Jerusaleemhiin.
#% Ja se tapattui niinä päivinä ko keisari Aukustus oli päättäny ette koko mailma piti maksaat verroo.
#% ... niin ota vasthaan tämän lahjan minun käðestä, sillä tarkoitus oli nähðä sinun silmät ...

#!! * __Imperativefromconneg__ selects and removes ConNeg
IFF:Imperativefromconneg ConNeg IF (0 Imprt)(*-1 Neg BARRIER WORD - Foc/kaan - Adv)(NEGATE -1 Foc/kaan LINK 2 S-BOUNDARY) ;
#% Anna se mikä oon sinun, olla sinun.
#% Ei yksikhään niistä jokka mie olin kuttunu.
# Jos mie nyt olen saannu hyväntahtoisuutta sinulta, niin ota vasthaan tämän lahjan minun käðestä
 # Mutta heilä ei ole juurta, het uskothaan vain vähäsen aikkaa ...
# ... ja nautinnosta niin ette het ei saa kypsyy sattoo.
# ei ole minun tiet, sanoo Herra.
# ... ja eikä mene sinne takasin ennen ko oon kastelu maan,
# Ei mikhään luotu ole hänele näkymätön.
# Mutta minule se ei merkitte mithään jos tet tuomitetta ...
# Sillä minula ei ole tiettoo misthään mitä mie olen tehny väärin.
# Mutta en mie sen tähđen ole viaton ...
# ... ja villielläimet ei tule syömhään heitä.

#!! * __ImperativeafterNeg__ removes Imprt if pronoun
REMOVE:ImperativeafterNeg Imprt IF (0 Pron)(*-1 Neg BARRIER WORD - Foc/kaan - Adv) ;
	#$ Ei yksikhään niistä jokka mie olin kuttunu.


#SELECT:congruencebetweennounandverb  IF (-1 N OR 1 N LINK V) (NEGATE -1 Dem) ;
#$ Mikä oon sinun meininki näissä kaikissa ihmissä tässä joukossa mikä oon sinun matkassa ...
#% ... niin ota vasthaan tämän lahjan minun käðestä, sillä tarkoitus oli nähðä sinun silmät ...

#REMOVE:differencebetweenfunctionalsubjunctionandtemporalsubjuntion CS IF (CS + ("ko")

#SELECT:ConNeg ConNeg IF (-1 Neg);

#!! * __interrel__ selects Interr of Rel if CS to the right
SELECT:interrel Interr OR Rel (1 CS) ; # Ei anna mithään?

#MAP (@GRAM-ERR) TARGET V (0 V + 3S LINK -1 N + S) ;

LIST WORDLEMMA = (".*"r) ; #!! * WORDLEMMA = regex giving the lemma in question

#!! * __errorth__ removes Err/Orth if there is an analysis without Err/Orth with the same lemma
REMOVE:errorth $$WORDLEMMA + (Err/Orth) (0 $$WORDLEMMA - (Err/Orth) ) ; #Removes Err/Orth analysis when there is an analysis with same lemma without Err/Orth

AFTER-SECTIONS              #


SUBSTITUTE (A) (A <fkv>) WORD ;  #RemoveFromApertium
SUBSTITUTE (N) (N <fkv>) WORD ;  #RemoveFromApertium
SUBSTITUTE (Adv) (Adv <fkv>) WORD ;  #RemoveFromApertium
SUBSTITUTE (V) (V <fkv>) WORD ; #RemoveFromApertium
SUBSTITUTE (Num) (Num <fkv>) WORD ;  #RemoveFromApertium
SUBSTITUTE (Interj) (Interj <fkv>) WORD ;  #RemoveFromApertium
SUBSTITUTE (Po) (Po <fkv>) WORD ; #RemoveFromApertium
SUBSTITUTE (Pr) (Pr <fkv>) WORD ; #RemoveFromApertium
SUBSTITUTE (Pron) (Pron <fkv>) WORD ; #RemoveFromApertium
SUBSTITUTE (CC) (CC <fkv>) WORD ; #RemoveFromApertium
SUBSTITUTE (CS) (CS <fkv>) WORD ; #RemoveFromApertium
SUBSTITUTE (Pcle) (Pcle <fkv>) WORD ; #RemoveFromApertium


